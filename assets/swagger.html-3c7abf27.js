import{_ as n,P as s,Q as a,a3 as p}from"./framework-62102715.js";const e={},t=p(`<h2 id="express-中使用-swagger-自动生成接口文档" tabindex="-1"><a class="header-anchor" href="#express-中使用-swagger-自动生成接口文档" aria-hidden="true">#</a> express 中使用 Swagger 自动生成接口文档</h2><p>Swagger 是一个用于描述和文档化 RESTful API 的框架，它提供了一种定义、构建、文档化和消费 RESTful API 的标准方式</p><p>在Express.js中，你可以使用Swagger工具自动生成API文档。要实现这一点，你可以按照以下步骤操作：</p><ol><li><p><strong>安装Swagger相关依赖：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> swagger-jsdoc swagger-ui-express <span class="token parameter variable">--save</span>
或
<span class="token function">pnpm</span> <span class="token function">add</span> swagger-jsdoc swagger-ui-express
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>swagger-jsdoc：用于生成 Swagger 规范的 JSDoc 注释解析器。</li><li>swagger-ui-express：用于在 Express 中提供 Swagger UI。</li></ul></li><li><p><strong>创建Swagger配置文件（swaggerOptions.js）：</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> swaggerOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">definition</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">openapi</span><span class="token operator">:</span> <span class="token string">&#39;3.0.0&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Your API&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">version</span><span class="token operator">:</span> <span class="token string">&#39;1.0.0&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;API documentation generated with Swagger&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">apis</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;./routes/*.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 指定包含路由的文件路径</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> swaggerOptions<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>在Express应用中使用Swagger：</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> swaggerJsdoc <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;swagger-jsdoc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> swaggerUi <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;swagger-ui-express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> swaggerOptions <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./swaggerOptions&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 引入上面创建的Swagger配置文件</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 使用swagger-jsdoc创建Swagger规范</span>
<span class="token keyword">const</span> swaggerSpec <span class="token operator">=</span> <span class="token function">swaggerJsdoc</span><span class="token punctuation">(</span>swaggerOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 将Swagger规范提供给swagger-ui-express中间件</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&#39;/api-docs&#39;</span><span class="token punctuation">,</span> swaggerUi<span class="token punctuation">.</span>serve<span class="token punctuation">,</span> swaggerUi<span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span>swaggerSpec<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Your routes go here...</span>

<span class="token keyword">const</span> <span class="token constant">PORT</span> <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">PORT</span> <span class="token operator">||</span> <span class="token number">3000</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token constant">PORT</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Server running on port </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">PORT</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，上面的代码中的 <code>./routes/*.js</code> 应该替换为实际包含你的路由的文件路径。</p></li><li><p><strong>为每个路由添加Swagger注释：</strong></p><p>在你的路由文件中，使用Swagger注释来描述每个API端点的信息。示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@swagger</span>
 * /api/user:
 *   get:
 *     summary: Get a list of users
 *     description: Retrieve a list of users from the database.
 *     responses:
 *       &#39;200&#39;:
 *         description: A successful response
 *       &#39;500&#39;:
 *         description: Internal server error
 */</span>
router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Your route logic here...</span>
  res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;Successfully retrieved users&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>根据环境变量判断是否启用Swagger：</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 根据环境变量判断是否启用 Swagger</span>
<span class="token keyword">const</span> isSwaggerEnabled <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>isSwaggerEnabled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">const</span> swaggerSpec <span class="token operator">=</span> <span class="token function">swaggerJsdoc</span><span class="token punctuation">(</span>swaggerOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
  app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&#39;/api-docs&#39;</span><span class="token punctuation">,</span> swaggerUi<span class="token punctuation">.</span>serve<span class="token punctuation">,</span> swaggerUi<span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span>swaggerSpec<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可以使用 <code>isSwaggerEnabled</code> 变量来决定是否启用Swagger，通常在非生产环境下开启以便于开发和测试。</p></li></ol><p>通过这些步骤，你的Express.js应用将自动生成具有Swagger文档的API文档。</p>`,5),o=[t];function c(i,l){return s(),a("div",null,o)}const u=n(e,[["render",c],["__file","swagger.html.vue"]]);export{u as default};
